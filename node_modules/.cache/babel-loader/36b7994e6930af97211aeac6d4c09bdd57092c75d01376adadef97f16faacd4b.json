{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\facial-recognition-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3 = require('aws-sdk/clients/s3');\nconst uuid = require('uuid');\nfunction App() {\n  _s();\n  var s3 = new AWS.S3();\n  const [image, setImage] = useState('');\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please upload an image to authenication.');\n  const [visitorName, setVisitorName] = useState('placeholder.jpg');\n  const [isAuth, setAuth] = useState(false);\n  function sendImage(e) {\n    e.preventDefault();\n    setVisitorName(image.name);\n    setUploadResultMessage(`Working ${image.name}`);\n    const visitorImageName = uuid.v4();\n    fetch(`https://42bt4wcvl8.execute-api.us-east-2.amazonaws.com/dev/analyze-people-data/${visitorImageName}.jpg`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'image/jpg'\n      },\n      body: image\n    }).then(async () => {\n      setUploadResultMessage(`Done uploading ${image.name}`);\n      const reponse = await authenticate(visitorImageName);\n      setUploadResultMessage(`done authenicating ${image.name}`);\n      console.debug(reponse);\n      if (reponse.Message === 'Success') {\n        setAuth(true);\n        setUploadResultMessage(`File Keys ${reponse['key']}`);\n      } else {\n        setUploadResultMessage(reponse.Message);\n        setUploadResultMessage(\"FAIL!\");\n        setAuth(false);\n      }\n    }).catch(error => {\n      setAuth(false);\n      setUploadResultMessage('There is an error during the authentication proces.');\n      console.error(error);\n    });\n  }\n  async function authenticate(visitorImageName) {\n    const requestUrl = 'https://42bt4wcvl8.execute-api.us-east-2.amazonaws.com/dev/peoplelol?' + new URLSearchParams({\n      objectKey: `${visitorImageName}.jpg`\n    });\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      return data.json();\n    }).catch(error => console.error(error));\n  }\n  async function getPicture() {\n    var params = {\n      Bucket: 'xxx-xx-xxx',\n      Key: '1.jpg'\n    };\n    var promise = s3.getSignedUrlPromise('getObject', params);\n    promise.then(function (url) {\n      res.send(url);\n    }, function (err) {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Facial Recognition systm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendImage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Authenticate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: uploadResultMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(`./visitors/${visitorName}`),\n      alt: \"Visitor\",\n      height: 250,\n      width: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getPicture,\n      children: \"BUTTON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oSMblNEHFpzFrvDDDHIoVzjA29M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","S3","require","uuid","App","_s","s3","AWS","image","setImage","uploadResultMessage","setUploadResultMessage","visitorName","setVisitorName","isAuth","setAuth","sendImage","e","preventDefault","name","visitorImageName","v4","fetch","method","headers","body","then","reponse","authenticate","console","debug","Message","catch","error","requestUrl","URLSearchParams","objectKey","data","json","getPicture","params","Bucket","Key","promise","getSignedUrlPromise","url","res","send","err","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","src","alt","height","width","onClick","_c","$RefreshReg$"],"sources":["D:/react/facial-recognition-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nconst S3 = require('aws-sdk/clients/s3')\n\nconst uuid = require('uuid');\n\nfunction App() {\n  var s3 = new AWS.S3();\n\n  const [image, setImage] = useState('');\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please upload an image to authenication.')\n  const [visitorName, setVisitorName] = useState('placeholder.jpg');\n  const [isAuth, setAuth] = useState(false);\n  \n  function sendImage(e){\n    e.preventDefault();\n    setVisitorName(image.name);\n    setUploadResultMessage(`Working ${image.name}`)\n\n    const visitorImageName = uuid.v4();\n    fetch(`https://42bt4wcvl8.execute-api.us-east-2.amazonaws.com/dev/analyze-people-data/${visitorImageName}.jpg`,{\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'image/jpg',\n    },\n    body: image}).then( async () => {\n      setUploadResultMessage(`Done uploading ${image.name}`)\n      const reponse = await authenticate(visitorImageName)\n    setUploadResultMessage(`done authenicating ${image.name}`)\n    console.debug(reponse)\n    if (reponse.Message === 'Success'){\n      setAuth(true)\n      setUploadResultMessage(`File Keys ${reponse['key']}`)\n      }else {\n        setUploadResultMessage(reponse.Message)\n        setUploadResultMessage(\"FAIL!\")\n        setAuth(false)\n      }\n    }).catch(error => {\n      setAuth(false);\n      setUploadResultMessage('There is an error during the authentication proces.')\n      console.error(error);\n    })\n  }\n\n  async function authenticate(visitorImageName) {\n    const requestUrl = 'https://42bt4wcvl8.execute-api.us-east-2.amazonaws.com/dev/peoplelol?' + new URLSearchParams({\n      objectKey: `${visitorImageName}.jpg`\n    });\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }).then((data) => {\n      return data.json();\n\n    }).catch(error => console.error(error));\n  }\n\n  async function getPicture(){\n      var params = {Bucket: 'xxx-xx-xxx', Key: '1.jpg'};\n      var promise = s3.getSignedUrlPromise('getObject', params);\n      promise.then(function(url) {\n        res.send(url)\n      }, function(err) { console.log(err) });\n  }\n  return ( \n    <div className=\"App\">\n      <h2>Facial Recognition systm</h2>\n      <form onSubmit={sendImage}>\n      <input type='file' name='image' onChange={e => setImage(e.target.files[0])} />\n        <button type='submit'>Authenticate</button>\n      </form>\n      <div >{uploadResultMessage}</div>\n      <img src={ require(`./visitors/${visitorName}`)} alt=\"Visitor\" height={250} width={250} />\n    <button onClick={getPicture}>BUTTON</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}